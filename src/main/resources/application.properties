# Server settings
server.port=8080
spring.data.mongodb.uri=mongodb://localhost:27017/Orders
spring.data.mongodb.auto-index-creation=true

#rabitMq settings:
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
#rabbitmq.queue.name=javaguides
#rabbitmq.exchange.name=javaguides_exchange
#rabbitmq.routing.key=javaguides_routing_key


# Database settings
#spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
#spring.datasource.username=dbuser
#spring.datasource.password=dbpassword
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Hibernate settings
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#redis
spring.redis.host=localhost
spring.redis.port=6379

mock.server.url=https://db29ee71-7252-4f02-a44c-59aa27e94540.mock.pstmn.io
# Logging settings
logging.level.org.springframework=INFO
logging.level.com.example=DEBUG
application.yml=
yaml=
Copy=code
# Server settings
server=
port=8080
# Database settings
#spring:
datasource=
url= jdbc:mysql://localhost:3306/mydatabase
#username= dbuser
username= admin
#password= dbpassword
password= pass
driver-class-name= com.mysql.cj.jdbc.Driver

# Hibernate settings
spring=
jpa=
show-sql=true
hibernate=
ddl-auto=update
# Logging settings
logging=
level=
org.springframework=INFO
com.example=DEBUG
You=can customize these settings based on your specific requirements. For example, you may need to change the database URL, username, password, and driver class name to match your database setup. Similarly, you can adjust logging levels and other Spring Boot configurations as needed.
Remember=to place the application.properties or application.yml file in the src/main/resources directory of your project. When you run your Spring Boot application, it will automatically pick up these configurations and apply them to your application.
